/* Generated by the protocol buffer compiler.  DO NOT EDIT! */
/* Generated from: scores.proto */

#ifndef PROTOBUF_C_scores_2eproto__INCLUDED
#define PROTOBUF_C_scores_2eproto__INCLUDED

#include <protobuf-c/protobuf-c.h>

PROTOBUF_C__BEGIN_DECLS

#if PROTOBUF_C_VERSION_NUMBER < 1003000
# error This file was generated by a newer version of protoc-c which is incompatible with your libprotobuf-c headers. Please update your headers.
#elif 1003003 < PROTOBUF_C_MIN_COMPILER_VERSION
# error This file was generated by an older version of protoc-c which is incompatible with your libprotobuf-c headers. Please regenerate this file with a newer version of protoc-c.
#endif


typedef struct _PlayerScore PlayerScore;
typedef struct _ScoreUpdate ScoreUpdate;


/* --- enums --- */


/* --- messages --- */

struct  _PlayerScore
{
  ProtobufCMessage base;
  int32_t player_id;
  int32_t score;
};
#define PLAYER_SCORE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&player_score__descriptor) \
    , 0, 0 }


struct  _ScoreUpdate
{
  ProtobufCMessage base;
  size_t n_scores;
  PlayerScore **scores;
  int32_t game_over;
};
#define SCORE_UPDATE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&score_update__descriptor) \
    , 0,NULL, 0 }


/* PlayerScore methods */
void   player_score__init
                     (PlayerScore         *message);
size_t player_score__get_packed_size
                     (const PlayerScore   *message);
size_t player_score__pack
                     (const PlayerScore   *message,
                      uint8_t             *out);
size_t player_score__pack_to_buffer
                     (const PlayerScore   *message,
                      ProtobufCBuffer     *buffer);
PlayerScore *
       player_score__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   player_score__free_unpacked
                     (PlayerScore *message,
                      ProtobufCAllocator *allocator);
/* ScoreUpdate methods */
void   score_update__init
                     (ScoreUpdate         *message);
size_t score_update__get_packed_size
                     (const ScoreUpdate   *message);
size_t score_update__pack
                     (const ScoreUpdate   *message,
                      uint8_t             *out);
size_t score_update__pack_to_buffer
                     (const ScoreUpdate   *message,
                      ProtobufCBuffer     *buffer);
ScoreUpdate *
       score_update__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   score_update__free_unpacked
                     (ScoreUpdate *message,
                      ProtobufCAllocator *allocator);
/* --- per-message closures --- */

typedef void (*PlayerScore_Closure)
                 (const PlayerScore *message,
                  void *closure_data);
typedef void (*ScoreUpdate_Closure)
                 (const ScoreUpdate *message,
                  void *closure_data);

/* --- services --- */


/* --- descriptors --- */

extern const ProtobufCMessageDescriptor player_score__descriptor;
extern const ProtobufCMessageDescriptor score_update__descriptor;

PROTOBUF_C__END_DECLS


#endif  /* PROTOBUF_C_scores_2eproto__INCLUDED */
